{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Memberr\\\\React_classes\\\\React_Router_Deep\\\\12-adv-starting-project\\\\frontend\\\\src\\\\components\\\\NewsletterSignup.js\",\n  _s = $RefreshSig$();\nimport { useFetcher } from 'react-router-dom';\nimport classes from './NewsletterSignup.module.css';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewsletterSignup() {\n  _s();\n  const fetcher = useFetcher(); //useFetcher é bom quando você quer fazer uma ação por debaixo dos panos, sem a necessidade de navegar para a página a que um deles pertence.\n  const {\n    data,\n    state\n  } = fetcher; //data é o dado que você quer pegar e state é o estado do fetcher\n  //fetcher é bom quando você quer fazer algo sem carregar uma pagina ou um route\n  useEffect(() => {\n    if (state === 'idle' && data && data.message) {\n      window.alert(data.message);\n    }\n  }, [data, state]);\n  return (\n    /*#__PURE__*/\n    //a action no form vai acessar a action da route /newsletter sem ir para o elemento que está atrelado a essa route\n    _jsxDEV(fetcher.Form, {\n      method: \"post\",\n      action: \"/newsletter\",\n      className: classes.newsletter,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        placeholder: \"Sign up for newsletter...\",\n        \"aria-label\": \"Sign up for newsletter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Sign up\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)\n  );\n}\n_s(NewsletterSignup, \"WjihN4CabdhkHDxQoVW7dBj/pPI=\", false, function () {\n  return [useFetcher];\n});\n_c = NewsletterSignup;\nexport default NewsletterSignup;\nvar _c;\n$RefreshReg$(_c, \"NewsletterSignup\");","map":{"version":3,"names":["useFetcher","classes","useEffect","jsxDEV","_jsxDEV","NewsletterSignup","_s","fetcher","data","state","message","window","alert","Form","method","action","className","newsletter","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LENOVO/Documents/Memberr/React_classes/React_Router_Deep/12-adv-starting-project/frontend/src/components/NewsletterSignup.js"],"sourcesContent":["import { useFetcher } from 'react-router-dom';\r\nimport classes from './NewsletterSignup.module.css';\r\nimport { useEffect } from 'react';\r\n\r\nfunction NewsletterSignup() {\r\n\r\n    const fetcher = useFetcher();//useFetcher é bom quando você quer fazer uma ação por debaixo dos panos, sem a necessidade de navegar para a página a que um deles pertence.\r\n    const {data, state} = fetcher;//data é o dado que você quer pegar e state é o estado do fetcher\r\n    //fetcher é bom quando você quer fazer algo sem carregar uma pagina ou um route\r\n    useEffect(() => {\r\n        if(state === 'idle' && data && data.message) {\r\n            window.alert(data.message);\r\n        }\r\n    }, [data, state]);\r\n  \r\n    return (//a action no form vai acessar a action da route /newsletter sem ir para o elemento que está atrelado a essa route\r\n    <fetcher.Form method=\"post\" action='/newsletter' className={classes.newsletter}> {/* fetcher.Form serve para quando você quer usar uma action ou uma loader sem necessariamente navegar para a página a que um deles pertence. */}\r\n      <input\r\n        type=\"email\"\r\n        placeholder=\"Sign up for newsletter...\"\r\n        aria-label=\"Sign up for newsletter\"\r\n      />\r\n      <button>Sign up</button>\r\n    </fetcher.Form>\r\n  );\r\n}\r\n\r\nexport default NewsletterSignup;"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,kBAAkB;AAC7C,OAAOC,OAAO,MAAM,+BAA+B;AACnD,SAASC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAExB,MAAMC,OAAO,GAAGP,UAAU,CAAC,CAAC,CAAC;EAC7B,MAAM;IAACQ,IAAI;IAAEC;EAAK,CAAC,GAAGF,OAAO,CAAC;EAC9B;EACAL,SAAS,CAAC,MAAM;IACZ,IAAGO,KAAK,KAAK,MAAM,IAAID,IAAI,IAAIA,IAAI,CAACE,OAAO,EAAE;MACzCC,MAAM,CAACC,KAAK,CAACJ,IAAI,CAACE,OAAO,CAAC;IAC9B;EACJ,CAAC,EAAE,CAACF,IAAI,EAAEC,KAAK,CAAC,CAAC;EAEjB;IAAA;IAAQ;IACRL,OAAA,CAACG,OAAO,CAACM,IAAI;MAACC,MAAM,EAAC,MAAM;MAACC,MAAM,EAAC,aAAa;MAACC,SAAS,EAAEf,OAAO,CAACgB,UAAW;MAAAC,QAAA,GAAC,GAAC,eAC/Ed,OAAA;QACEe,IAAI,EAAC,OAAO;QACZC,WAAW,EAAC,2BAA2B;QACvC,cAAW;MAAwB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpC,CAAC,eACFpB,OAAA;QAAAc,QAAA,EAAQ;MAAO;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ;EAAC;AAEnB;AAAClB,EAAA,CArBQD,gBAAgB;EAAA,QAELL,UAAU;AAAA;AAAAyB,EAAA,GAFrBpB,gBAAgB;AAuBzB,eAAeA,gBAAgB;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}