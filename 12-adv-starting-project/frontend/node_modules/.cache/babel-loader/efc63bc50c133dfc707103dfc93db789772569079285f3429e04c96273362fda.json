{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Memberr\\\\React_classes\\\\React_Router_Deep\\\\12-adv-starting-project\\\\frontend\\\\src\\\\pages\\\\EventsDetail.js\",\n  _s = $RefreshSig$();\nimport { json, useRouteLoaderData } from \"react-router-dom\";\nimport EventItem from \"../components/EventItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function EventsDetailPage() {\n  _s();\n  const data = useRouteLoaderData('event-detail'); //Isso serve para pegar o dado de um loader na pagina em que ele reside ou num componente atrelado a essa pagina\n\n  return /*#__PURE__*/_jsxDEV(EventItem, {\n    event: data.event\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}\n_s(EventsDetailPage, \"4DBW6nwrvXRMSwRBgIay5Sszcp8=\", false, function () {\n  return [useRouteLoaderData];\n});\n_c = EventsDetailPage;\nexport async function loader({\n  request,\n  params\n}) {\n  const id = params.eventId; //Esse params é o que está no path do App.js, O params serve para pegar os parametros da URL\n\n  const response = await fetch('http://localhost:8080/events/' + id); //Isso serve para dar load no dado atrelado ao evento clicado, o qual tem seu próprio id\n\n  if (!response.ok) {\n    throw json({\n      message: 'Could not fetch details for selected event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return response;\n  }\n}\nvar _c;\n$RefreshReg$(_c, \"EventsDetailPage\");","map":{"version":3,"names":["json","useRouteLoaderData","EventItem","jsxDEV","_jsxDEV","EventsDetailPage","_s","data","event","fileName","_jsxFileName","lineNumber","columnNumber","_c","loader","request","params","id","eventId","response","fetch","ok","message","status","$RefreshReg$"],"sources":["C:/Users/LENOVO/Documents/Memberr/React_classes/React_Router_Deep/12-adv-starting-project/frontend/src/pages/EventsDetail.js"],"sourcesContent":["import { json, useRouteLoaderData } from \"react-router-dom\";\r\n\r\nimport EventItem from \"../components/EventItem\";\r\n\r\nexport default function EventsDetailPage() {\r\n\r\n    const data = useRouteLoaderData('event-detail'); //Isso serve para pegar o dado de um loader na pagina em que ele reside ou num componente atrelado a essa pagina\r\n\r\n    return (\r\n        <EventItem event={data.event} />\r\n    );\r\n}\r\n\r\nexport async function loader({request, params}) {\r\n\r\n    const id = params.eventId; //Esse params é o que está no path do App.js, O params serve para pegar os parametros da URL\r\n\r\n    const response = await fetch('http://localhost:8080/events/' + id) //Isso serve para dar load no dado atrelado ao evento clicado, o qual tem seu próprio id\r\n    \r\n    if(!response.ok) {\r\n        throw json({message: 'Could not fetch details for selected event.'}, {status: 500})\r\n    } else {\r\n        return response;\r\n    }\r\n}"],"mappings":";;AAAA,SAASA,IAAI,EAAEC,kBAAkB,QAAQ,kBAAkB;AAE3D,OAAOC,SAAS,MAAM,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,eAAe,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAEvC,MAAMC,IAAI,GAAGN,kBAAkB,CAAC,cAAc,CAAC,CAAC,CAAC;;EAEjD,oBACIG,OAAA,CAACF,SAAS;IAACM,KAAK,EAAED,IAAI,CAACC;EAAM;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAExC;AAACN,EAAA,CAPuBD,gBAAgB;EAAA,QAEvBJ,kBAAkB;AAAA;AAAAY,EAAA,GAFXR,gBAAgB;AASxC,OAAO,eAAeS,MAAMA,CAAC;EAACC,OAAO;EAAEC;AAAM,CAAC,EAAE;EAE5C,MAAMC,EAAE,GAAGD,MAAM,CAACE,OAAO,CAAC,CAAC;;EAE3B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,+BAA+B,GAAGH,EAAE,CAAC,EAAC;;EAEnE,IAAG,CAACE,QAAQ,CAACE,EAAE,EAAE;IACb,MAAMrB,IAAI,CAAC;MAACsB,OAAO,EAAE;IAA6C,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACvF,CAAC,MAAM;IACH,OAAOJ,QAAQ;EACnB;AACJ;AAAC,IAAAN,EAAA;AAAAW,YAAA,CAAAX,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}