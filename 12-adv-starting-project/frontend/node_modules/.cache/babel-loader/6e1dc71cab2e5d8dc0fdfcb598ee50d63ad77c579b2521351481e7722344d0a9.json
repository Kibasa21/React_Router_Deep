{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LENOVO\\\\Documents\\\\Memberr\\\\React_classes\\\\React_Router_Deep\\\\12-adv-starting-project\\\\frontend\\\\src\\\\components\\\\EventForm.js\",\n  _s = $RefreshSig$();\nimport { Form, redirect, json, useActionData, useNavigate, useNavigation } from 'react-router-dom';\nimport classes from './EventForm.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction EventForm({\n  method,\n  event\n}) {\n  _s();\n  const data = useActionData(); // useActionData serve para pegar os dados da action que foi disparada\n  const navigate = useNavigate();\n  const navigation = useNavigation(); // useNavigation serve para pegar informações sobre a navegação, se estamos numa transição, estamos carregando\n\n  const isSubmitting = navigation.state === 'submitting'; // dados para uma transição ou não há transição de páginas.\n  console.log(isSubmitting);\n  function cancelHandler() {\n    navigate('..');\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    method: method,\n    className: classes.form,\n    children: [\" \", data && data.errors && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Object.values(data.errors).map(err => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: err\n      }, err, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 48\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"title\",\n        children: \"Title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"title\",\n        type: \"text\",\n        name: \"title\",\n        required: true,\n        defaultValue: event ? event.title : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"image\",\n        children: \"Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"image\",\n        type: \"url\",\n        name: \"image\",\n        required: true,\n        defaultValue: event ? event.image : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"date\",\n        children: \"Date\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"date\",\n        type: \"date\",\n        name: \"date\",\n        required: true,\n        defaultValue: event ? event.date : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"description\",\n        children: \"Description\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"description\",\n        name: \"description\",\n        rows: \"5\",\n        required: true,\n        defaultValue: event ? event.description : ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.actions,\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: cancelHandler,\n        disabled: isSubmitting,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: isSubmitting,\n        children: isSubmitting ? 'Submitting...' : 'Save'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(EventForm, \"4RpZWvb1/vq18jUIhqcDrPiPElE=\", false, function () {\n  return [useActionData, useNavigate, useNavigation];\n});\n_c = EventForm;\nexport default EventForm;\nexport async function action({\n  request,\n  params\n}) {\n  //Quero fazer com que essa action seja mais dinâmica, ela pode criar eventos e também editá-los\n  //request, no geral, serve para pegar os dados do formulário e o params serve para pegar os parametros da URL\n  const method = request.method; //O request é o que foi passado pelo Form do EventForm no App.js, e o method é um método que pega o método do formulário\n  const data = await request.formData(); //O request é o que foi passado pelo Form do EditEventPage no App.js, e o formData é um método que pega os dados do formulário\n\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  }; //O get é um método que pega o valor do input com o name passado\n\n  let URL = 'http://localhost:8080/events';\n  if (method === 'PATCH') {\n    const eventId = params.eventId;\n    URL += '/' + eventId;\n  }\n  console.log('aa');\n  const response = await fetch(URL, {\n    method: method,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n  if (response.status === 422) {\n    //422 é um erro de validação\n    return response;\n  }\n  if (!response.ok) {\n    throw json({\n      message: 'Could no save event.'\n    }, {\n      status: 500\n    });\n  } else {\n    return redirect('/events');\n  }\n} //Esse action serve para pegar os dados do formulário e mandar para a API, e redirecionar para a página de eventos\nvar _c;\n$RefreshReg$(_c, \"EventForm\");","map":{"version":3,"names":["Form","redirect","json","useActionData","useNavigate","useNavigation","classes","jsxDEV","_jsxDEV","EventForm","method","event","_s","data","navigate","navigation","isSubmitting","state","console","log","cancelHandler","className","form","children","errors","Object","values","map","err","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","id","type","name","required","defaultValue","title","image","date","rows","description","actions","onClick","disabled","_c","action","request","params","formData","eventData","get","URL","eventId","response","fetch","headers","body","JSON","stringify","status","ok","message","$RefreshReg$"],"sources":["C:/Users/LENOVO/Documents/Memberr/React_classes/React_Router_Deep/12-adv-starting-project/frontend/src/components/EventForm.js"],"sourcesContent":["import { Form, redirect, json, useActionData, useNavigate, useNavigation } from 'react-router-dom';\n\nimport classes from './EventForm.module.css';\n\nfunction EventForm({ method, event }) {\n  const data = useActionData();// useActionData serve para pegar os dados da action que foi disparada\n  const navigate = useNavigate();\n  const navigation = useNavigation();// useNavigation serve para pegar informações sobre a navegação, se estamos numa transição, estamos carregando\n\n  const isSubmitting = navigation.state === 'submitting' // dados para uma transição ou não há transição de páginas.\n  console.log(isSubmitting);\n\n  function cancelHandler() {\n    navigate('..');\n  }\n\n  return (\n    <Form method={method} className={classes.form}> {/* Form is a component from react-router-dom, ele é diferente de form. Ele ja vem com o event.preventDefault() e pega os dados do forms e manda para a action*/}\n      {(data && data.errors) && <ul>\n        {Object.values(data.errors).map(err => <li key={err}>{err}</li>)}\n      </ul>}\n      <p>\n        <label htmlFor=\"title\">Title</label>\n        <input id=\"title\" type=\"text\" name=\"title\" required defaultValue={event ? event.title : ''} />\n      </p>\n      <p>\n        <label htmlFor=\"image\">Image</label>\n        <input id=\"image\" type=\"url\" name=\"image\" required defaultValue={event ? event.image : ''} />\n      </p>\n      <p>\n        <label htmlFor=\"date\">Date</label>\n        <input id=\"date\" type=\"date\" name=\"date\" required defaultValue={event ? event.date : ''} />\n      </p>\n      <p>\n        <label htmlFor=\"description\">Description</label>\n        <textarea id=\"description\" name=\"description\" rows=\"5\" required defaultValue={event ? event.description : ''} />\n      </p>\n      <div className={classes.actions}>\n        <button type=\"button\" onClick={cancelHandler} disabled={isSubmitting}>\n          Cancel\n        </button>\n        <button disabled={isSubmitting}>{isSubmitting ? 'Submitting...' : 'Save'}</button>\n      </div>\n    </Form>\n  );\n}\n\nexport default EventForm;\n\nexport async function action({ request, params }) { //Quero fazer com que essa action seja mais dinâmica, ela pode criar eventos e também editá-los\n  //request, no geral, serve para pegar os dados do formulário e o params serve para pegar os parametros da URL\n  const method = request.method; //O request é o que foi passado pelo Form do EventForm no App.js, e o method é um método que pega o método do formulário\n  const data = await request.formData(); //O request é o que foi passado pelo Form do EditEventPage no App.js, e o formData é um método que pega os dados do formulário\n\n  const eventData = {\n    title: data.get('title'),\n    image: data.get('image'),\n    date: data.get('date'),\n    description: data.get('description')\n  } //O get é um método que pega o valor do input com o name passado\n\n  let URL = 'http://localhost:8080/events';\n\n  if (method === 'PATCH') {\n    const eventId = params.eventId;\n    URL += '/' + eventId;\n  }\n  console.log('aa');\n  const response = await fetch(URL, {\n    method: method,\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(eventData)\n  });\n\n  if (response.status === 422) { //422 é um erro de validação\n    return response;\n  }\n\n  if (!response.ok) {\n    throw json({ message: 'Could no save event.' }, { status: 500 })\n  } else {\n    return redirect('/events');\n  }\n} //Esse action serve para pegar os dados do formulário e mandar para a API, e redirecionar para a página de eventos\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}